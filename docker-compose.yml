services:
  retro-game-zone-frontend:
    container_name: retro-game-zone-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - retro-game-zone-network

  retro-game-zone-backend:
    container_name: retro-game-zone-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      database:
        condition: service_healthy
    networks:
      - retro-game-zone-network

  database:
    image: postgres:16
    restart: unless-stopped
    container_name: database
    env_file: .env
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - retro-game-zone-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pg-admin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    networks:
      - retro-game-zone-network
    depends_on:
      - database

networks:
  retro-game-zone-network:
    driver: bridge

volumes:
  node_modules: {}
  postgres_data:
